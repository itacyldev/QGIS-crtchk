name: Build and Test
run-name: ${{ github.actor }} is running test 🚀
on: [ push ]
permissions:
  checks: write
jobs:
  Run-Unit-Test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - name: Prepare environment
        run: docker pull qgis/qgis:latest
      - name: Start testing-env container
        run: docker run -d -t --name qgis-testing -v  ${GITHUB_WORKSPACE}:/plugin_project qgis/qgis:latest
      - name: Install dependencies
        run: |
          docker exec -t qgis-testing sh -c "pip install unittest-xml-reporting"
          docker exec -t qgis-testing sh -c "pip install coverage"
          docker exec -t qgis-testing sh -c "pip install coverage-badge"
      - name: Run tests and Coverage in container
        run: docker exec -t qgis-testing sh -c "cd /plugin_project;./scripts/run_test.sh"
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/TEST-*.xml'
          detailed_summary: true
          include_passed: true

  Calc-coverage:
    runs-on: ubuntu-latest
   steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Coverage Badge
        run: coverage-badge -f -o coverage.svg
      - name: Commit badge file
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add coverage.svg
          git commit -m "Updated coverage.svg"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.github_token }}
          branch: ${{ github.ref }}